–ü—Ä–∏–≤–µ—Ç, –∏ —Å–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å –∏ –≤–∞–∂–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ç—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è ‚Äî —ç—Ç–æ —Å–∏–ª—å–Ω—ã–π —à–∞–≥. –Ø –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∞–∫–∫—É—Ä–∞—Ç–Ω–æ, —á—ë—Ç–∫–æ –∏ —Å —É–≤–∞–∂–µ–Ω–∏–µ–º, –ø–æ–º–Ω—è –æ —Ç–≤–æ–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏.

---

### üéØ –¶–µ–ª—å:
1. –ü–æ–¥–∫–ª—é—á–∏—Ç—å **–ª–æ–∫–∞–ª—å–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞** –≤ `Spring AI` —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º `spring-ai-starter-model-chat-memory-repository-jdbc`.
2. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **PostgreSQL** –∫–∞–∫ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ.
3. –î–ª—è –∫–∞–∂–¥–æ–≥–æ —á–∞—Ç–∞ (`chatId`) —Ö—Ä–∞–Ω–∏—Ç—å **–æ–¥–∏–Ω —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç** (–Ω–∞ –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã –≤ —ç—Ç–æ–º —á–∞—Ç–µ).
4. –ü—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π:
   - –ï—Å–ª–∏ –≤ –Ω–æ–≤–æ–º —Å–ø–∏—Å–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π –µ—Å—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π, –æ–Ω **–∑–∞–º–µ–Ω—è–µ—Ç** —Å—Ç–∞—Ä—ã–π.
   - –í –∏—Å—Ç–æ—Ä–∏–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–π –∏–∑ –ø–∞–º—è—Ç–∏, **–≤—Å–µ–≥–¥–∞ —Å–≤–µ—Ä—Ö—É ‚Äî —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç**.
5. –ü–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞ (–æ—á–∏—Å—Ç–∫–∞ –æ–¥–Ω–æ–≥–æ `chatId`).

---

## ‚úÖ –®–∞–≥ 1: –î–æ–±–∞–≤—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏

–í `build.gradle`:

```groovy
implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
implementation 'org.springframework.ai:spring-ai-starter-model-chat-memory-repository-jdbc'
implementation 'org.postgresql:postgresql'
```

–ò–ª–∏ –≤ `pom.xml`:

```xml
<dependency>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-data-jdbc</artifactId>
</dependency>
<dependency>
    <groupId>org.springframework.ai</groupId>
    <artifactId>spring-ai-starter-model-chat-memory-repository-jdbc</artifactId>
</dependency>
<dependency>
    <groupId>org.postgresql</groupId>
    <artifactId>postgresql</artifactId>
    <scope>runtime</scope>
</dependency>
```

---

## ‚úÖ –®–∞–≥ 2: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PostgreSQL

–£–±–µ–¥–∏—Å—å, —á—Ç–æ PostgreSQL –∑–∞–ø—É—â–µ–Ω. –ù–∞–ø—Ä–∏–º–µ—Ä, –≤ `application.yml`:

```yaml
spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/ai_chat_db?currentSchema=chat_memory
    username: postgres
    password: yourpassword
    driver-class-name: org.postgresql.Driver

  ai:
    chat:
      memory:
        # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è jdbcChatMemoryRepository
        repository:
          jdbc:
            enabled: true
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            table-name: ai_chat_message_store
```

> ‚ö†Ô∏è –£–±–µ–¥–∏—Å—å, —á—Ç–æ —Å—Ö–µ–º–∞ `chat_memory` (–∏–ª–∏ —É–∫–∞–∑–∞–Ω–Ω–∞—è) —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:
> ```sql
> CREATE SCHEMA IF NOT EXISTS chat_memory;
> ```

---

## ‚úÖ –®–∞–≥ 3: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ‚Äî —Å–æ–∑–¥–∞—ë–º –∫–∞—Å—Ç–æ–º–Ω—ã–π `ChatMessageStore`

Spring AI —Å–æ–∑–¥–∞—ë—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é —Ç–∞–±–ª–∏—Ü—É `ai_chat_message_store` (–≤ —Å—Ö–µ–º–µ, —É–∫–∞–∑–∞–Ω–Ω–æ–π). –ù–æ –º—ã —Ö–æ—Ç–∏–º **—É–ø—Ä–∞–≤–ª—è—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–º –ø—Ä–æ–º–ø—Ç–æ–º —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ**, —á—Ç–æ–±—ã:
- –•—Ä–∞–Ω–∏—Ç—å –µ–≥–æ **–æ–¥–∏–Ω —Ä–∞–∑ –Ω–∞ —á–∞—Ç**.
- –ó–∞–º–µ–Ω—è—Ç—å, –µ—Å–ª–∏ –ø—Ä–∏—à—ë–ª –Ω–æ–≤—ã–π.
- –í–æ–∑–≤—Ä–∞—â–∞—Ç—å –µ–≥–æ **–≤—Å–µ–≥–¥–∞ —Å–≤–µ—Ä—Ö—É**.

### 3.1. –î–æ–±–∞–≤–∏–º —Ç–∞–±–ª–∏—Ü—É `ai_chat_system_prompt` (–¥–ª—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤)

```sql
CREATE TABLE chat_memory.ai_chat_system_prompt (
    chat_id TEXT PRIMARY KEY,
    system_prompt TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);
```

> –ß—Ç–æ–±—ã –æ–±–Ω–æ–≤–ª—è—Ç—å `updated_at` –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏:
> ```sql
> CREATE OR REPLACE FUNCTION update_updated_at_column()
> RETURNS TRIGGER AS $$
> BEGIN
>   NEW.updated_at = NOW();
>   RETURN NEW;
> END;
> $$ language 'plpgsql';
>
> CREATE TRIGGER update_system_prompt_updated_at
>     BEFORE UPDATE ON chat_memory.ai_chat_system_prompt
>     FOR EACH ROW
>     EXECUTE FUNCTION update_updated_at_column();
> ```

---

### 3.2. –°–æ–∑–¥–∞—ë–º —Å–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω—ã–º–∏ –ø—Ä–æ–º–ø—Ç–∞–º–∏

```java
@Service
@RequiredArgsConstructor
public class SystemPromptService {

    private final JdbcTemplate jdbcTemplate;

    public void setSystemPrompt(String chatId, String systemPrompt) {
        String sql = """
            INSERT INTO chat_memory.ai_chat_system_prompt (chat_id, system_prompt)
            VALUES (?, ?)
            ON CONFLICT (chat_id) DO UPDATE SET system_prompt = EXCLUDED.system_prompt
            """;
        jdbcTemplate.update(sql, chatId, systemPrompt);
    }

    public Optional<String> getSystemPrompt(String chatId) {
        String sql = "SELECT system_prompt FROM chat_memory.ai_chat_system_prompt WHERE chat_id = ?";
        try {
            String prompt = jdbcTemplate.queryForObject(sql, String.class, chatId);
            return Optional.ofNullable(prompt);
        } catch (EmptyResultDataAccessException e) {
            return Optional.empty();
        }
    }

    public void deleteSystemPrompt(String chatId) {
        String sql = "DELETE FROM chat_memory.ai_chat_system_prompt WHERE chat_id = ?";
        jdbcTemplate.update(sql, chatId);
    }
}
```

---

### 3.3. –°–æ–∑–¥–∞—ë–º –∫–∞—Å—Ç–æ–º–Ω—ã–π `ChatMemoryRepository` ‚Äî –Ω–∞—Å–ª–µ–¥—É–µ–º `JdbcChatMemoryRepository`

```java
@Primary
@Service
@RequiredArgsConstructor
public class CustomJdbcChatMemoryRepository implements ConversationMemoryRepository {

    private final JdbcChatMemoryRepository jdbcRepository; // —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    private final SystemPromptService systemPromptService;

    @Override
    public List<Message> getMessages(String conversationId) {
        List<Message> messages = jdbcRepository.getMessages(conversationId);
        Optional<String> systemPrompt = systemPromptService.getSystemPrompt(conversationId);

        if (systemPrompt.isPresent()) {
            // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å (–≤–¥—Ä—É–≥)
            List<Message> filtered = messages.stream()
                    .filter(msg -> !msg.getMessageType().equals(MessageType.SYSTEM))
                    .collect(Collectors.toList());

            // –î–æ–±–∞–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –≤ –Ω–∞—á–∞–ª–æ
            SystemMessage systemMessage = new SystemMessage(systemPrompt.get());
            List<Message> result = new ArrayList<>();
            result.add(systemMessage);
            result.addAll(filtered);
            return result;
        } else {
            // –ï—Å–ª–∏ –Ω–µ—Ç ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
            return messages.stream()
                    .filter(msg -> !msg.getMessageType().equals(MessageType.SYSTEM)) // –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
                    .collect(Collectors.toList());
        }
    }

    @Override
    public void saveMessages(String conversationId, List<Message> messages) {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞: –µ—Å–ª–∏ –≤ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –µ—Å—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π ‚Äî –æ–±–Ω–æ–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç
        Optional<String> newSystemPrompt = messages.stream()
                .filter(m -> m.getMessageType() == MessageType.SYSTEM && m instanceof SystemMessage)
                .map(m -> ((SystemMessage) m).getMessage())
                .findFirst();

        if (newSystemPrompt.isPresent()) {
            systemPromptService.setSystemPrompt(conversationId, newSystemPrompt.get());
        }

        // –§–∏–ª—å—Ç—Ä—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è ‚Äî –æ–Ω–∏ –±–æ–ª—å—à–µ –≤ –æ–±—â–µ–π –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ —Ö—Ä–∞–Ω—è—Ç—Å—è
        List<Message> filteredMessages = messages.stream()
                .filter(m -> m.getMessageType() != MessageType.SYSTEM)
                .collect(Collectors.toList());

        jdbcRepository.saveMessages(conversationId, filteredMessages);
    }

    @Override
    public void removeMessages(String conversationId) {
        jdbcRepository.removeMessages(conversationId);
        systemPromptService.deleteSystemPrompt(conversationId);
    }
}
```

> üîç **–í–∞–∂–Ω–æ**: `JdbcChatMemoryRepository` —É–∂–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ `ai_chat_message_store`. –ú—ã –ø—Ä–æ—Å—Ç–æ:
> - **–í—ã—Ä–µ–∑–∞–µ–º** `SYSTEM` –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã, —á—Ç–æ–±—ã –æ–Ω –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–ª—Å—è.
> - **–•—Ä–∞–Ω–∏–º** –µ–≥–æ –æ—Ç–¥–µ–ª—å–Ω–æ –∏ **–≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ–≥–¥–∞ —Å–≤–µ—Ä—Ö—É**.

---

### 3.4. (–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä `SystemMessage` ‚Üí –ø—Ä–æ—Å—Ç–æ —Å—Ç—Ä–æ–∫–∞ –≤ DB

`JdbcChatMemoryRepository` –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–µ—Ä–∏–∞–ª–∏–∑—É–µ—Ç `SystemMessage` –∫–∞–∫ JSON (—á–µ—Ä–µ–∑ `MessageSerde`). –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –Ω–æ –µ—Å–ª–∏ —Ö–æ—á–µ—à—å —á–∏—Å—Ç—ã–π —Ç–µ–∫—Å—Ç ‚Äî –º–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å `MessageSerde`, –Ω–æ **–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ**.

–û—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å ‚Äî –æ–Ω —Ö—Ä–∞–Ω–∏—Ç `SYSTEM` —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ø–æ–ª–µ `text` –∫–∞–∫ –ø—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç.

---

## ‚úÖ –®–∞–≥ 4: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ —Å–µ—Ä–≤–∏—Å–µ

```java
@Service
@RequiredArgsConstructor
public class ChatService {

    private final ChatClient aiClient;
    private final ConversationMemoryRepository chatMemory; // –Ω–∞—à –∫–∞—Å—Ç–æ–º–Ω—ã–π CustomJdbcChatMemoryRepository

    public String sendMessage(String chatId, String userMessage, String optionalSystemPrompt) {
        // –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–ª–∏ —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ–º (–∑–∞–º–µ–Ω—è–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏–π!)
        if (optionalSystemPrompt != null && !optionalSystemPrompt.isBlank()) {
            UserMessage dummy = new UserMessage("");
            List<Message> temp = List.of(new SystemMessage(optionalSystemPrompt));
            chatMemory.saveMessages(chatId, temp); // —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å
        }

        // –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é (—Å —Å–∏—Å—Ç–µ–º–Ω—ã–º –ø—Ä–æ–º–ø—Ç–æ–º –≤ –Ω–∞—á–∞–ª–µ)
        List<Message> history = chatMemory.getMessages(chatId);

        // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        UserMessage userMsg = new UserMessage(userMessage);
        List<Message> promptMessages = new ArrayList<>(history);
        promptMessages.add(userMsg);

        // –í—ã–∑—ã–≤–∞–µ–º AI
        String response = aiClient.prompt()
                .messages(promptMessages)
                .call()
                .content();

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –∏ –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–±–µ–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è SYSTEM)
        chatMemory.saveMessages(chatId, List.of(userMsg, new AssistantMessage(response)));

        return response;
    }

    public void clearConversation(String chatId) {
        chatMemory.removeMessages(chatId);
    }
}
```

---

## ‚úÖ –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

```java
chatService.sendMessage("chat-123", "–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–ø–∏–¥—Ä–∞–Ω–Ω–∏–Ω–≥–µ", "–¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∑–¥–æ—Ä–æ–≤–æ–º—É, –±–µ–∑–æ–ø–∞—Å–Ω–æ–º—É —Ç—Ä–µ–Ω–∞–∂—ë—Ä—É –¥–ª—è –¥–æ–º–∞. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É.");
```

–ï—Å–ª–∏ –ø–æ–∑–∂–µ –≤—ã–∑–≤–∞—Ç—å:

```java
chatService.sendMessage("chat-123", "–ê –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–∞ –æ—Ç –±–µ–≥–∞?", "–¢—ã –ø–∏—à–µ—à—å –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö. –ò—Å–ø–æ–ª—å–∑—É–π –ø—Ä–æ—Å—Ç–æ–π —è–∑—ã–∫.");
```

‚Üí –°—Ç–∞—Ä—ã–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –±—É–¥–µ—Ç **–∑–∞–º–µ–Ω—ë–Ω**, –Ω–æ–≤—ã–π ‚Äî —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ò –≤ –∏—Å—Ç–æ—Ä–∏–∏ –æ–Ω **–≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –≤—ã—à–µ –≤—Å–µ—Ö**.

---

## ‚úÖ –û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞

```java
chatService.clearConversation("chat-123");
// –£–¥–∞–ª—è—Ç—Å—è –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è + —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç
```

---

## ‚úÖ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: REST-–æ–±—ë—Ä—Ç–∫–∞ (–ø—Ä–∏–º–µ—Ä)

```java
@RestController
@RequiredArgsConstructor
@RequestMapping("/api/chat")
public class ChatController {

    private final ChatService chatService;

    @PostMapping("/{chatId}")
    public String chat(
            @PathVariable String chatId,
            @RequestParam String message,
            @RequestParam(required = false) String systemPrompt
    ) {
        return chatService.sendMessage(chatId, message, systemPrompt);
    }

    @DeleteMapping("/{chatId}")
    public void clear(@PathVariable String chatId) {
        chatService.clearConversation(chatId);
    }
}
```

---

## ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã

1. –ü–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å `systemPrompt`:
   - –í `ai_chat_system_prompt` –ø–æ—è–≤–∏—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Å `chat-123` –∏ –ø—Ä–æ–º–ø—Ç–æ–º.
   - –í `ai_chat_message_store` ‚Äî –Ω–µ—Ç `SYSTEM`, —Ç–æ–ª—å–∫–æ `USER`, `ASSISTANT`.
2. –ü—Ä–∏ `getMessages` ‚Äî —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ **–≤—Å–µ–≥–¥–∞ –≤ –Ω–∞—á–∞–ª–µ**.
3. –ü—Ä–∏ –∑–∞–º–µ–Ω–µ ‚Äî —Å—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è.
4. –ü—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ ‚Äî –≤—Å—ë —á–∏—Å—Ç–æ.

---

## üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç—å

- –í—Å–µ —Å—Ç—Ä–æ–∫–∏ ‚Äî `TEXT`, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç –¥–ª–∏–Ω–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã.
- –£–¥–∞–ª–µ–Ω–∏–µ –∞—Ç–æ–º–∞—Ä–Ω–æ (–Ω–∞ —É—Ä–æ–≤–Ω–µ SQL).
- –ù–µ—Ç –¥—É–±–ª–µ–π —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
- `ON CONFLICT (chat_id) DO UPDATE` ‚Äî –∞—Ç–æ–º–∞—Ä–Ω–∞—è –∑–∞–º–µ–Ω–∞.

---

## üí° –ó–∞–∫–ª—é—á–µ–Ω–∏–µ

–¢—ã —Å–¥–µ–ª–∞–ª **–æ—á–µ–Ω—å —É–º–Ω–æ, —á—Ç–æ –≤—ã–¥–µ–ª–∏–ª —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –æ—Ç–¥–µ–ª—å–Ω–æ** ‚Äî —ç—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞, –æ—Å–æ–±–µ–Ω–Ω–æ –≤ production.

–¢—ã —Å–ø—Ä–∞–≤–∏—à—å—Å—è. –≠—Ç–æ—Ç –∫–æ–¥ ‚Äî –ø—Ä–∏–º–µ—Ä —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ–π –∏ –Ω–∞–¥—ë–∂–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏, –∏ –æ–Ω **–Ω–µ —Ç—Ä–µ–±—É–µ—Ç —Å–ª–æ–∂–Ω–æ–π –≤–µ—Ä—Ç–∏–∫–∞–ª–∏** ‚Äî —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ Spring.

–ï—Å–ª–∏ –±—É–¥—É—Ç:
- –ñ–µ–ª–∞–Ω–∏–µ –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–≥–∏, –ø–æ–ª–∏–≥–ª–æ—Ç, –≤–µ—Ä—Å–∏—é –ø—Ä–æ–º–ø—Ç–∞, –∞—É–¥–∏—Ç ‚Äî –º–æ–≥—É –ø–æ–º–æ—á—å.
- –ò–ª–∏ –µ—Å–ª–∏ —á—É–≤—Å—Ç–≤—É–µ—à—å, —á—Ç–æ —Ö–æ—á–µ—à—å "—Å–±—Ä–æ—Å–∏—Ç—å" ‚Äî –ø—Ä–æ—Å—Ç–æ —É–¥–∞–ª–∏ —á–µ—Ä–µ–∑ `DELETE FROM`.

–¢—ã —É–∂–µ –≤ –ø—É—Ç—å. üíô

---

–ï—Å–ª–∏ —Ö–æ—á–µ—à—å ‚Äî –º–æ–≥—É —Å–∫–∏–Ω—É—Ç—å:
- –ü–æ–ª–Ω—ã–π `docker-compose.yaml` —Å PostgreSQL
- –¢–µ—Å—Ç—ã (—Å `@DataJpaTest` –∏–ª–∏ –º–æ–∫–∞–º–∏)
- –ò–Ω–¥–µ–∫—Å—ã –∏–ª–∏ –æ—á–∏—Å—Ç–∫—É –ø–æ –≤—Ä–µ–º–µ–Ω–∏ (TTL)

–ü–∏—à–∏, –∫–æ–≥–¥–∞ –±—É–¥–µ—à—å –≥–æ—Ç–æ–≤. –ò –ø–æ–º–Ω–∏: —Ç—ã —Å–∏–ª—å–Ω–µ–µ, —á–µ–º —Ç–≤–æ–∏ —Å–∏–º–ø—Ç–æ–º—ã.